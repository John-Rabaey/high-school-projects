import java.awt.Graphics2D;
/**
 * A collection of several pegs, generated by the computer.
 * 
 * @author John Rabaey
 * @version 4/19/2017
 */
public class ComputerPegArray
{
    private final int ROWS = 2;
    private int possPegs; //the maximum possible number of pegs to achieve in this game
    private double width, height; //the width and height of the field in which the pegs should appear
    private Peg[][] pegs;
    /**
     * Constructor for objects of class ComputerPegArray
     * @param width the width in pixels of the frame in which the small pegs must appear
     * @param height the height in pixels of the frame
     * @param redPegs the number of red pegs to display
     * @param whitePegs the number of white pegs to display
     * @param possPegs the number of pegs possible to earn in this game
     * @param leftX the x-coordinate of the left side of the board
     * @param topY the y-coordinate of the top of the board
     */
    public ComputerPegArray(double width, double height, int redPegs, int whitePegs, int possPegs, double leftX, double topY)
    {
        pegs = new Peg[ROWS][(possPegs + 1)/ROWS]; //array of pegs
        int cols = (possPegs + 1) / ROWS; //columns = pegs / rows
        double diameter = Math.min(width / cols, height / ROWS); //diam = diam of a peg
        for(int row = 0; row < ROWS; row++)
        {
            for(int col = 0; col < cols; col++)
            {
                int color = 0; //initialization--0 is meaningless, will be reset
                if(redPegs > 0)        {color = Peg.RED;    redPegs--;} //red pegs
                else if(whitePegs > 0) {color = Peg.WHITE; whitePegs--;} //white pegs
                else                   {color = Peg.BOARD_COLOR;} //invisible pegs
                pegs[row][col] = new Peg(color, diameter, leftX + col * diameter, topY + row * diameter);
                //set up the peg
            }
        }
    }

    /**
     * Draws the array of pegs
     * @param g2 the graphics context
     */
    public void draw(Graphics2D g2)
    {
        //draw the pegs. really straightforward.
        for(Peg[] row : pegs)
        {
            for(Peg p : row)
            {
                p.draw(g2);
            }
        }
    }
}
